@page "/profile"
@inject IAuthService AuthService
@attribute [Authorize]
<AuthorizeView>
    <center><h3>Estas Logueado <i>@context!.User!.Identity!.Name</i></h3></center>
</AuthorizeView>

<center>
    <h5>Cambiar la contraseña:</h5>
</center>

<EditForm Model="request" OnValidSubmit="ChangePassword">
    <DataAnnotationsValidator/>
    <div class="mb-3">
        <label for="password">Nueva Contraseña</label>
        <InputText id="password" @bind-Value="request.Password" class="form-control" ></InputText>
        <ValidationMessage For="@(()=>request.Password)"/>
    </div>
    <div class="mb-3">
        <label for="confirmPassword">Repetir Contraseña</label>
        <InputText id="confirmPassword" @bind-Value="request.ConfirmPassword" class="form-control" type="password"></InputText>
        <ValidationMessage For="@(()=>request.ConfirmPassword)"/>
    </div>
    <center><button type="submit" class="btn btn-primary">Cambiar</button></center>
    <div class="@messageCssClass">
        <span>@message</span>
    </div>
</EditForm>

@code {
    UserChangePassword request = new UserChangePassword();
    string message = string.Empty;
    string messageCssClass = string.Empty;

    private async Task ChangePassword()
    {
        var result = await AuthService.ChangePassword(request);
        message = result.Message;
        if (!result.Success)
        {
            messageCssClass = "text-danger";
        }
        messageCssClass = "text-success";
    }
}
