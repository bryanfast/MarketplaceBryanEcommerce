@page "/cart"
@inject ICartService CartService
@inject IOrderService OrderService
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject IJSRuntime _jsRuntime

<PageTitle>Carrito de Compras</PageTitle>

@if (cartProducts == null || cartProducts.Count == 0)
{
    <container class="container2">
        <div class="d-flex justify-content-center h-100">
            <div class="col-md-12 text-center">
                <span class="display-1 d-block">Opps..</span>
                <div class="mb-4 lead">@message</div>
                <a href="/" class="btn btn-link">Regresar a la tienda</a>
            </div>
        </div>
    </container>
}
@*else if (orderPLaced)
{

    <container class="container2">
        <div class="d-flex justify-content-center h-100">
            <div class="col-md-12 text-center">
                <span class="display-1 d-block">Gracias por su compra!</span>
                <span>Puede verificar su orden de compra en el panel de Ordenes <a href="/orders">aqui</a>.</span>
            </div>
        </div>
    </container>
}*@

else
{
    <div class="justify-content-center">
        <br />
        <center><h3>Carrito de Compras</h3></center>

        @foreach (var product in cartProducts)
        {
            <div class="container">
                <div class="image-wrapper">
                    <img src="@product.ImageUrl" class="image" />
                </div>
                <div class="name">
                    <h5><a href="/product/@product.ProductId">@product.Title</a></h5>
                    <span>@product.ProducType</span><br />
                    <input type="number" value="@product.Quantity" @onchange="@((ChangeEventArgs e)=>UpdateQuantity(e,product))" class="form-control input-quantity" min="1" />
                    <button class="btn-delete" @onclick="@(()=>RemoveItemCart(product.ProductId,product.ProductTypeId))">Eliminar</button>
                </div>
                <div class="cart-product-price">
                    $@(product.Price*product.Quantity)
                </div>
            </div>
        }
        <div class="container2">
            <div class="d-flex justify-content-center h-100">
                <div class="card">
                    <div class="cart-product-price-total">
                        <center>
                        <table class="table">
                            <tbody>
                                <tr>
                                    <td>Iva(19%):</td>
                                    <td>$@Math.Round(cartProducts.Sum(product =>product.Price*product.Quantity*19/100))</td>
                                </tr>
                                <tr>
                                    <td>Total (@cartProducts.Count): </td>
                                    <td> $@cartProducts.Sum(product =>product.Price*product.Quantity)</td>
                                </tr>
                            </tbody>
                        </table>
                        </center>
                    </div>
                    @*<button class="alert-success btn" @onclick="PlaceOrder">Ordenar</button>*@
                    <script suppress-error="BL9992"
                        src="https://checkout.epayco.co/checkout.js"
                        class="epayco-button"
                        data-epayco-key="491d6a0b6e992cf924edd8d3d088aff1"
                        data-epayco-amount=@Math.Round(cartProducts.Sum(product =>product.Price*product.Quantity)*4000)
                        data-epayco-name="Compra Marketplace Bryan"
                        data-epayco-description=""
                        data-epayco-currency="us"
                        data-epayco-country="co"
                        data-epayco-test="true"
                        data-epayco-external="false"
                        data-epayco-response="https://ejemplo.com/respuesta.html"
                        data-epayco-confirmation="https://ejemplo.com/confirmacion"
                        data-epayco-methodconfirmation="get"
                        data-epayco-button="https://www.copiworld.com.ar/images/pagar/boton-pagar-copiworld.png">
                        
                    </script>
                </div>
            </div>
        </div>
        <br />
        <br />
    </div>
    @if (isAuthenticated)
    {
        <div>
            <AddressForm/>
        </div>
    }
}


@code {

    public void LlamarJavaScritp()
    {
        _jsRuntime.InvokeVoidAsync("MostrarAlerta", "Estos es un mensaje en C#");
    }


    List<CartProductResponse>? cartProducts = null;
    string message = "Cargando productos del carrito de compras...";
    bool isAuthenticated = false;

    protected override async Task OnInitializedAsync()
    {
        isAuthenticated = await AuthService.IsUserAuthenticated();
        await LoadCart();
    }

    private async Task RemoveItemCart(int productId, int productTypeId)
    {
        await CartService.RemoveItemCart(productId, productTypeId);
        await LoadCart();
    }

    private async Task LoadCart()
    {
        await CartService.GetCartItemsCount();
        cartProducts = await CartService.GetCartProducts();
        if (cartProducts == null || cartProducts.Count == 0)
        {
            message = "El carrito esta vacio.";
        }
    }

    private async Task UpdateQuantity(ChangeEventArgs e, CartProductResponse product)
    {
        product.Quantity = int.Parse(e.Value!.ToString()!);
        if (product.Quantity < 1)
        {
            product.Quantity = 1;
            e.Value = 1;
        }
        await CartService.UdpateQuantity(product);
    }

    private async Task PlaceOrder()
    {
        string url = await OrderService.PlaceOrder();
        NavigationManager.NavigateTo(url);
    }
}
